{"ast":null,"code":"var _jsxFileName = \"/home/ingrid_amalie/project-3/frontend/src/atoms/UserForm.tsx\";\nimport React, { useState } from \"react\";\nimport { MdClose } from \"react-icons/md\";\nimport { registerUser, signInUser } from \"../assets/userHandling\";\n\nconst UserForm = props => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n  const validateInput = () => {\n    if (props.isLoginForm) {\n      if (username && password) {\n        signInUser(username, password);\n      }\n    } else {\n      if (username && password && passwordConfirmation && password === passwordConfirmation) {\n        registerUser(username, password);\n      }\n    }\n  };\n\n  const handleInputChange = e => {\n    if (e.target.name === \"username\") {\n      setUsername(e.target.value);\n    } else if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    } else if (e.target.name === \"confirm-password\") {\n      setPasswordConfirmation(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"popup-close-button\",\n    className: \"red-button\",\n    onClick: props.isLoginForm ? props.toggleLoginForm : props.toggleRegisterForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MdClose, {\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, props.isLoginForm ? \"Sign in\" : \"Register user\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"username-input\",\n    name: \"username\",\n    value: username,\n    type: \"text\",\n    placeholder: \"Type username\",\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password-input\",\n    name: \"password\",\n    value: password,\n    type: \"password\",\n    placeholder: \"Type password\",\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), props.isLoginForm ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Confirm password\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"confirm-password-input\",\n    name: \"confirm-password\",\n    value: passwordConfirmation,\n    type: \"password\",\n    placeholder: \"Type password again\",\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"red-button\",\n    onClick: validateInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default UserForm;","map":{"version":3,"sources":["/home/ingrid_amalie/project-3/frontend/src/atoms/UserForm.tsx"],"names":["React","useState","MdClose","registerUser","signInUser","UserForm","props","username","setUsername","password","setPassword","passwordConfirmation","setPasswordConfirmation","validateInput","isLoginForm","handleInputChange","e","target","name","value","toggleLoginForm","toggleRegisterForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { MdClose } from \"react-icons/md\";\nimport { registerUser, signInUser } from \"../assets/userHandling\";\n\ninterface UserFormProps {\n  isLoginForm: boolean;\n  toggleRegisterForm?: () => void;\n  toggleLoginForm?: () => void;\n}\n\nconst UserForm = (props: UserFormProps) => {\n  const [username, setUsername] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState<string>(\"\");\n\n  const validateInput = () => {\n    if (props.isLoginForm) {\n      if (username && password) {\n        signInUser(username, password);\n      }\n    } else {\n      if (\n        username &&\n        password &&\n        passwordConfirmation &&\n        password === passwordConfirmation\n      ) {\n        registerUser(username, password);\n      }\n    }\n  };\n\n  const handleInputChange = (e: any) => {\n    if (e.target.name === \"username\") {\n      setUsername(e.target.value);\n    } else if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    } else if (e.target.name === \"confirm-password\") {\n      setPasswordConfirmation(e.target.value);\n    }\n  };\n\n  return (\n    <div id=\"popup\">\n      <div id=\"popup-content\">\n        <button\n          id=\"popup-close-button\"\n          className=\"red-button\"\n          onClick={\n            props.isLoginForm ? props.toggleLoginForm : props.toggleRegisterForm\n          }\n        >\n          <MdClose size=\"20px\" />\n        </button>\n        <h3>{props.isLoginForm ? \"Sign in\" : \"Register user\"}</h3>\n        <form>\n          <label>Username</label>\n          <input\n            id=\"username-input\"\n            name=\"username\"\n            value={username}\n            type=\"text\"\n            placeholder=\"Type username\"\n            onChange={handleInputChange}\n            required\n          />\n          <br />\n          <label>Password</label>\n          <input\n            id=\"password-input\"\n            name=\"password\"\n            value={password}\n            type=\"password\"\n            placeholder=\"Type password\"\n            onChange={handleInputChange}\n            required\n          />\n          <br />\n          {props.isLoginForm ? null : (\n            <>\n              <label>Confirm password</label>\n              <input\n                id=\"confirm-password-input\"\n                name=\"confirm-password\"\n                value={passwordConfirmation}\n                type=\"password\"\n                placeholder=\"Type password again\"\n                onChange={handleInputChange}\n                required\n              />\n            </>\n          )}\n          <br />\n          <input type=\"submit\" className=\"red-button\" onClick={validateInput} />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}