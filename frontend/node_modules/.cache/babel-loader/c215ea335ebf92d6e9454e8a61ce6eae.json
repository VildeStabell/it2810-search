{"ast":null,"code":"var _jsxFileName = \"/home/ingrid_amalie/project-3/frontend/src/containers/Header.tsx\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport store from \"../redux/store\";\nimport \"../styles/Header.css\";\nimport UserForm from \"../atoms/UserForm\";\n/**\n * Header is a component containing every item in the header. What buttons\n * you see will depend on whethter or not you are logged in.\n * @var isLoggedIn keeps track of if the user is logged in or not.\n * @var displayRegisterForm displays the form if the user presses the Register\n *    button, and removes on valid submit or closing the form.\n * @var displayLoginForm displays the form if the user presses the Sign in\n *    button, and removes on valid submit or closing the form.\n */\n\nconst Header = () => {\n  const [isloggedIn, setIsLoggedIn] = useState();\n  const [displayRegisterForm, updateDisplayRegisterForm] = useState(false);\n  const [displayLoginForm, updateDisplayLoginForm] = useState(false);\n\n  const toggleRegisterForm = () => {\n    updateDisplayRegisterForm(!displayRegisterForm);\n  };\n\n  const toggleLoginForm = () => {\n    updateDisplayLoginForm(!displayLoginForm);\n  };\n\n  const loginStatus = useSelector(state => state.loginStatus.loginStatus);\n  store.subscribe(() => setIsLoggedIn(loginStatus));\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"[SETT INN EN GOD TITTEL HER]\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, isloggedIn ? /*#__PURE__*/React.createElement(\"button\", {\n    id: \"profile-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"PROFILE\") : /*#__PURE__*/React.createElement(\"button\", {\n    id: \"register-button\",\n    onClick: toggleRegisterForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"REGISTER\"), isloggedIn ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"login-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"SIGN OUT\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"login-buttons\",\n    onClick: toggleLoginForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"SIGN IN\"), displayRegisterForm ? /*#__PURE__*/React.createElement(UserForm, {\n    isLoginForm: false,\n    toggleRegisterForm: toggleRegisterForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }) : null, displayLoginForm ? /*#__PURE__*/React.createElement(UserForm, {\n    isLoginForm: true,\n    toggleLoginForm: toggleLoginForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }) : null));\n};\n\nexport default Header;","map":{"version":3,"sources":["/home/ingrid_amalie/project-3/frontend/src/containers/Header.tsx"],"names":["React","useState","useSelector","store","UserForm","Header","isloggedIn","setIsLoggedIn","displayRegisterForm","updateDisplayRegisterForm","displayLoginForm","updateDisplayLoginForm","toggleRegisterForm","toggleLoginForm","loginStatus","state","subscribe"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,EAA5C;AACA,QAAM,CAACO,mBAAD,EAAsBC,yBAAtB,IAAmDR,QAAQ,CAC/D,KAD+D,CAAjE;AAGA,QAAM,CAACS,gBAAD,EAAmBC,sBAAnB,IAA6CV,QAAQ,CAAU,KAAV,CAA3D;;AAEA,QAAMW,kBAAkB,GAAG,MAAM;AAC/BH,IAAAA,yBAAyB,CAAC,CAACD,mBAAF,CAAzB;AACD,GAFD;;AAIA,QAAMK,eAAe,GAAG,MAAM;AAC5BF,IAAAA,sBAAsB,CAAC,CAACD,gBAAF,CAAtB;AACD,GAFD;;AAIA,QAAMI,WAAoB,GAAGZ,WAAW,CACrCa,KAAD,IAAgBA,KAAK,CAACD,WAAN,CAAkBA,WADI,CAAxC;AAIAX,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAMT,aAAa,CAACO,WAAD,CAAnC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,eAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,UAAU,gBACT;AAAQ,IAAA,EAAE,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADS,gBAGT;AAAQ,IAAA,EAAE,EAAC,iBAAX;AAA6B,IAAA,OAAO,EAAEM,kBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAQGN,UAAU,gBACT;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADS,gBAGT;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,OAAO,EAAEO,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXJ,EAeGL,mBAAmB,gBAClB,oBAAC,QAAD;AACE,IAAA,WAAW,EAAE,KADf;AAEE,IAAA,kBAAkB,EAAEI,kBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkB,GAKhB,IApBN,EAqBGF,gBAAgB,gBACf,oBAAC,QAAD;AAAU,IAAA,WAAW,EAAE,IAAvB;AAA6B,IAAA,eAAe,EAAEG,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe,GAEb,IAvBN,CAFF,CADF;AA8BD,CAnDD;;AAqDA,eAAeR,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport store from \"../redux/store\";\nimport \"../styles/Header.css\";\nimport UserForm from \"../atoms/UserForm\";\n\n/**\n * Header is a component containing every item in the header. What buttons\n * you see will depend on whethter or not you are logged in.\n * @var isLoggedIn keeps track of if the user is logged in or not.\n * @var displayRegisterForm displays the form if the user presses the Register\n *    button, and removes on valid submit or closing the form.\n * @var displayLoginForm displays the form if the user presses the Sign in\n *    button, and removes on valid submit or closing the form.\n */\n\nconst Header = () => {\n  const [isloggedIn, setIsLoggedIn] = useState<boolean>();\n  const [displayRegisterForm, updateDisplayRegisterForm] = useState<boolean>(\n    false\n  );\n  const [displayLoginForm, updateDisplayLoginForm] = useState<boolean>(false);\n\n  const toggleRegisterForm = () => {\n    updateDisplayRegisterForm(!displayRegisterForm);\n  };\n\n  const toggleLoginForm = () => {\n    updateDisplayLoginForm(!displayLoginForm);\n  };\n\n  const loginStatus: boolean = useSelector(\n    (state: any) => state.loginStatus.loginStatus\n  );\n\n  store.subscribe(() => setIsLoggedIn(loginStatus));\n\n  return (\n    <header>\n      <h3 id=\"title\">[SETT INN EN GOD TITTEL HER]</h3>\n      <div className=\"header-right\">\n        {isloggedIn ? (\n          <button id=\"profile-button\">PROFILE</button>\n        ) : (\n          <button id=\"register-button\" onClick={toggleRegisterForm}>\n            REGISTER\n          </button>\n        )}\n        {isloggedIn ? (\n          <button className=\"login-buttons\">SIGN OUT</button>\n        ) : (\n          <button className=\"login-buttons\" onClick={toggleLoginForm}>\n            SIGN IN\n          </button>\n        )}\n        {displayRegisterForm ? (\n          <UserForm\n            isLoginForm={false}\n            toggleRegisterForm={toggleRegisterForm}\n          />\n        ) : null}\n        {displayLoginForm ? (\n          <UserForm isLoginForm={true} toggleLoginForm={toggleLoginForm} />\n        ) : null}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}